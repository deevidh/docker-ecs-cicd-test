---
AWSTemplateFormatVersion: 2010-09-09


Parameters:
  Name:
    Type: String

  TaskDefinitionFamily:
    Type: String

Resources:

  Repository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub "${Name}-ecr"
    DeletionPolicy: Retain

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub "${TaskDefinitionFamily}-TaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${Name}-cluster

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${Name}-cluster"

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub "${Name}-alb"
      SecurityGroupIngress:
        - CidrIp: "0.0.0.0/0"
          IpProtocol: "TCP"
          FromPort: 80
          ToPort: 80
      VpcId:
        Fn::ImportValue:
          !Sub "${Name}-VpcId"

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              Fn::Sub: ${Name}-Subnets
      SecurityGroups:
        - !Ref SecurityGroup

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: LoadBalancer
    Properties:
      VpcId:
        Fn::ImportValue:
          !Sub "${Name}-VpcId"
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: "ip"
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1
      Conditions:
        - Field: path-pattern
          Values:
            - /
      Actions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward


Outputs:

  ClusterName:
      Description: Name of the ECS Cluster
      Value: !Ref Cluster
      Export:
        Name:
          'Fn::Sub': '${Name}-ClusterName'

  ECRUrl:
    Value: !GetAtt Repository.RepositoryUri

  TargetGroup:
    Description: Target group ARN
    Value: !Ref TargetGroup
    Export:
      Name:
        'Fn::Sub': '${Name}-LoadBalancerTG'

  ServiceUrl:
    Description: URL of the load balancer for the sample service.
    Value: !Sub http://${LoadBalancer.DNSName}

  SecurityGroup:
    Description: Security group ID of load balancer
    Value: !Ref SecurityGroup
    Export:
      Name:
        'Fn::Sub': '${Name}-LoadBalancerSG'
